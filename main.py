# Fun√ß√£o que exibe o menu principal do sistema
def menu_inicial(): 
    print("1. Adicionar aluno")
    print("2. Ver Boletim de todos os alunos")
    print("3. Buscar aluno pelo nome")  # Tem um errinho de digita√ß√£o: "qluno" ‚Üí "aluno"
    print("4. Sair")

# Dicion√°rio com os nomes dos alunos como chaves e listas de notas como valores
alunos = {
    "Gabriel": [7.5, 8.0, 9.0, 5.5],
    "Laura": [4.5, 8.5, 7.5, 9.0],
    "Sandra": [6.5, 7.5, 9.0, 10.0],
    "Gabriela": [10.0, 10.0, 10.0, 9.5],
    "Fernando": [6.0, 8.0, 7.0, 5.5],
    "Bernardo": [5.0, 7.5, 4.0, 10.0]
}

# Loop principal do programa: ser√° executado at√© que o usu√°rio escolha sair
while True:
    menu_inicial()  # Mostra o menu para o usu√°rio

    # Solicita uma op√ß√£o e converte para inteiro
    opcao = int(input("Bem-Vindo! O que posso fazer por voc√™ hoje? "))

    # Op√ß√£o 1: Adicionar novo aluno
    if opcao == 1:
        novatos = input("Informe o nome do novo aluno: ")
        
        if novatos in alunos:  # Verifica se o aluno j√° est√° cadastrado
            print("Aluno j√° cadastrado!")
        else:
            alunos[novatos] = []  # Cria uma nova entrada no dicion√°rio com lista de notas vazia

    # Op√ß√£o 2: Exibir o boletim completo (todos os alunos e suas notas)
    elif opcao == 2:
        print(alunos)  # Mostra o dicion√°rio completo (forma simples)

    # Op√ß√£o 3: Buscar aluno pelo nome
    elif opcao == 3:
        # Recebe o nome e usa .capitalize() para padronizar a entrada
        busca = str(input("Digite o nome do Aluno: ")).capitalize()

        if busca in alunos:  # Verifica se o nome existe no dicion√°rio
            print(f"As nota de {busca}: {alunos[busca]}")  # Exibe as notas do aluno
        else: 
            print(f"{busca} n√£o encontrado na nossa base de dados!üòí")  # Mensagem de erro se n√£o achar o aluno

    # Op√ß√£o 4: Sair do programa
    elif opcao == 4:
        print("Tenha um bom dia!")
        break  # Encerra o la√ßo while e finaliza o programa
